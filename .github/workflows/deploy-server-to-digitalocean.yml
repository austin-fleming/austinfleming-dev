name: Build and Deploy server to Digitalocean

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: api-server
  IMAGE_TAG: ${{ github.sha }}
  REGISTRY: ghcr.io

jobs:
  push_to_ghcr:
    name: Push container to GH Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Push to package registry
        uses: elgohr/Publish-Docker-Github-Action@v4
        with:
          name: ${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
          registry: ${{ env.REGISTRY }}
          workdir: ./apps/server

  deploy_to_digitalocean:
    name: Deploy container to Digitalocean
    needs: [push_to_ghcr]
    runs-on: ubuntu-latest
    steps:
      - name: Enable ssh
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DO_SSH_KEY }}

      - name: Add known host
        run: ssh-keyscan -H ${{ secrets.DO_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Log into GH package registry
        run: ssh ${{ secrets.DO_SSH_USER }}@${{ secrets.DO_SSH_HOST }} "docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.GHCR_PAT }}"

      - name: Pull new container
        run: ssh ${{ secrets.DO_SSH_USER }}@${{ secrets.DO_SSH_HOST }} "docker pull ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"

      - name: Hault deployed container
        continue-on-error: true
        run: ssh ${{ secrets.DO_SSH_USER }}@${{ secrets.DO_SSH_HOST }} "docker stop ${{ env.IMAGE_NAME }}"

      - name: Delete deployed container
        continue-on-error: true
        run: ssh ${{ secrets.DO_SSH_USER }}@${{ secrets.DO_SSH_HOST }} "docker rm ${{ env.IMAGE_NAME }}"

      #TODO: This should be more sophisticated. At the very least, it needs a --restart flag to ensure it recovers from exceptions.
      - name: Start new container
        run: ssh ${{ secrets.DO_SSH_USER }}@${{ secrets.DO_SSH_HOST }} "docker run -p ${{ secrets.SERVER_PORT }}:${{ secrets.SERVER_PORT }} -d --name=${{ env.IMAGE_NAME }} ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"

      - name: Log out from GH package registry
        run: ssh ${{ secrets.DO_SSH_USER }}@${{ secrets.DO_SSH_HOST }} "docker logout ${{ env.REGISTRY }}"
